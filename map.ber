1111111111
1P1C010CC1
1010C10111
1000010C01
1111011101
1C01000101
10E001C001
1111111111

0 = EMPTY
1 = WALL
C = COLLECTIBLE
E = EXIT
P = PLAYER STARTING POSITION

Check si elle est carre 
Check si elle est entouree de 1

Check si ya un P, C (AT LEAST ONE), EMPTY

Pas besoin de check si ya un valid path

Check aussi si ya pas de .ber a la fin de la map et que cest pas un dossier
11111111
1P1C0001
10100001
10100101
10100101
10000101
1000C1E1
11111111

On check si :
Cest carre
Cest entoure de 1
Ya bien un P E et cb de c
Si ya le .ber

-----------------------------

Faire la fonction qui fait tout le checking

ft_checkber
ft_checksq
ft_checkclose
ft_checkforbid

int	main(void)
{
	int maplen = ft_maplen("test.ber");
	int fd = open("test.ber", O_RDONLY);
	printf("Map length : %d\n", maplen);
	printf("First line length : %d\n", ft_linelen(get_next_line(fd)));

	printf("Is map square? : %d %d\n", ft_checksq("test.ber", maplen), maplen);
	
	printf("Is map closed? : %d\n", ft_checkclose("test.ber", maplen));

	printf(".ber : %d\n", ft_checkber("test.ber"));
	printf("P : %d\n", has_p("test.ber", maplen));
	printf("E : %d\n", has_e("test.ber", maplen));
	printf("C : %d\n", howmuch_c("test.ber", maplen));
	printf("Is there forbidden char ? : %d\n", ft_checkforbid("test.ber", maplen));

	printf("Is map valid ? : %d\n", ft_mapcheck("test.ber", maplen));
}
